import { pick } from 'lodash';
import { computed } from 'mobx';
import { observable } from 'scoopy-mobx';

export { IArticleListParams, IArticleListResult } from './transport';

export interface IArticleData {
  id: string;
  title: string;
  fullTextUrl: string;
}

export default class Article {

  constructor(data?: IArticleData) {
    if (data)
      this.data = data;
  }

  // TODO(tim): Treating all field values as a single object will result in
  // suboptimally efficient change propagation and memoization.
  @observable private data: Partial<IArticleData> = {};

  @computed get id() {
    return this.data.id;
  }

  @computed get title() {
    return this.data.title.replace(/\<\/?mark\>/g, '');
  }

  @computed get externalUrl() {
    return this.data.fullTextUrl;
  }

}
