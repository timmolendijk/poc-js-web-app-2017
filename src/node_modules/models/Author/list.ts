import * as fetch from 'isomorphic-fetch';
import { createTransportError } from 'transport';
import { IAuthorData } from './transport';

const FIXTURE = {
  "issuedQuery": "tim",
  "totalAuthorCount": 636,
  "authors": [
    {
      "id": "92e0d546-54b4-4a7c-9606-0830fdb44cb0",
      "fullName": "Edwin <mark>Timmer</mark>",
      "articleCount": 109,
      "followerCount": 0,
      "linkedinUrl": "https://www.linkedin.com/in/edwin-timmer-5a109430",
      "score": 4.098239,
      "type": "author",
      "claimed": false,
      "serials": [
        {
          "id": "nl-elsevier",
          "name": "Elsevier"
        },
        {
          "id": "nl-telegraaf",
          "name": "De Telegraaf"
        }
      ]
    },
    {
      "id": "11d31a49-3f8b-4ea2-8afe-0534a314e640",
      "fullName": "Suzanna <mark>Timmer</mark>",
      "articleCount": 70,
      "followerCount": 0,
      "linkedinUrl": "https://www.linkedin.com/in/suzanna-timmer-aa923610",
      "score": 3.637503,
      "type": "author",
      "claimed": false,
      "serials": [
        {
          "id": "nl-ad",
          "name": "AD"
        },
        {
          "id": "nl-parool",
          "name": "Parool"
        }
      ]
    },
    {
      "id": "884020ea-6417-4d1f-be72-067058df5822",
      "fullName": "<mark>Tim</mark> Niemantsverdriet",
      "articleCount": 163,
      "followerCount": 0,
      "linkedinUrl": "https://www.linkedin.com/in/tim-niemantsverdriet-2120384a",
      "score": 3.3748624,
      "type": "author",
      "claimed": false,
      "serials": [
        {
          "id": "nl-ad",
          "name": "AD"
        },
        {
          "id": "nl-parool",
          "name": "Parool"
        }
      ]
    },
    {
      "id": "aee28eac-eedd-4194-b554-93e565bd1405",
      "fullName": "Miel <mark>Timmers</mark>",
      "articleCount": 26,
      "followerCount": 0,
      "linkedinUrl": "https://www.linkedin.com/in/miel-timmers-23587119",
      "score": 3.2215784,
      "type": "author",
      "claimed": false,
      "serials": [
        {
          "id": "nl-ad",
          "name": "AD"
        }
      ]
    },
    {
      "id": "63e82edc-d427-4470-91f5-7be02b842130",
      "fullName": "<mark>Tim</mark> de Wit",
      "articleCount": 167,
      "followerCount": 0,
      "linkedinUrl": "https://www.linkedin.com/in/tim-de-wit-281917b",
      "score": 3.0935836,
      "type": "author",
      "claimed": false,
      "serials": [
        {
          "id": "nl-parool",
          "name": "Parool"
        },
        {
          "id": "nl-trouw",
          "name": "Trouw"
        },
        {
          "id": "nl-vn",
          "name": "Vrij Nederland"
        }
      ]
    },
    {
      "id": "14d45066-01a6-4f80-b202-3d05c2260977",
      "fullName": "<mark>Tim</mark> Wagemakers",
      "articleCount": 72,
      "followerCount": 0,
      "linkedinUrl": null,
      "score": 3.0266104,
      "type": "author",
      "claimed": false,
      "serials": [
        {
          "id": "nl-nrc",
          "name": "NRC Handelsblad"
        },
        {
          "id": "nl-nrc-next",
          "name": "nrc.next"
        },
        {
          "id": "nl-parool",
          "name": "Parool"
        }
      ]
    },
    {
      "id": "b1de978b-3a54-48b3-b8a1-2b9308064153",
      "fullName": "<mark>Tim</mark> Luimes",
      "articleCount": 20,
      "followerCount": 0,
      "linkedinUrl": null,
      "score": 3.0163639,
      "type": "author",
      "claimed": false,
      "serials": [
        {
          "id": "nl-parool",
          "name": "Parool"
        }
      ]
    }
  ]
};

function fromSourceFormat(data: any): IAuthorData {
  return {
    id: data.id,
    name: data.fullName
  };
}

export default async function ({ query }) {
  await new Promise(resolve => setTimeout(resolve, 1000));
  return FIXTURE.authors.map(fromSourceFormat);
/*
  const response = await fetch(`https://api.journa.be/search/${encodeURIComponent(query)}`, {
    cache: 'no-cache',
    credentials: 'include',
    mode: 'cors'
  });
  if (!response.ok)
    throw createTransportError('list', `${response.status}: ${response.statusText}`);
  return (await response.json()).map(fromSourceFormat);
*/
}
