import * as moment from 'moment';
import { pick } from 'lodash';
import { computed } from 'mobx';
import { getFields, field, identifier, observable } from 'state';
import { ITransport } from 'transport';
import transport from './transport';

export interface IAuthorData {
  id: string;
  name: string;
}

export default class Author implements IAuthorData {

  // TODO(tim): Turns out, if class contains a getter or method named `name`,
  // `Author.name` no longer returns `"Author"` (but instead `""`). Why??
  static readonly displayName = 'Author';

  static readonly transport: ITransport<Author> = transport;

  // TODO(tim): Is this data as in identical to store contents? Or values as in
  // identical to what the object fields return upon get?
  constructor(data?: IAuthorData) {
    Object.assign(this, pick(data, getFields(this)));
  }

  @observable(identifier(field))() id: string;
  @observable(field)() name: string;

}
