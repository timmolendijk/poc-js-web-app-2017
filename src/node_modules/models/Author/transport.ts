import { createTransportError } from 'transport';
import { Author } from 'models';
import { IAuthorData } from './';

function fromSourceFormat(data: any): IAuthorData {
  return {
    id: data.id,
    name: data.fullName
  };
}

async function list({ query }) {
  const response = await fetch(`https://api.journa.be/search/${encodeURIComponent(query)}`, {
    cache: 'no-cache',
    credentials: 'include',
    mode: 'cors'
  });
  if (!response.ok)
    throw createTransportError('list', `${response.status}: ${response.statusText}`);
  return (await response.json()).authors.map(fromSourceFormat);
}

export default {

  async list(opts?) {
    const result = await list(opts);
    return result.map((item: IAuthorData) => new Author(item));
  }

};
